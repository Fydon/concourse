#!/bin/bash

set -e

RUN_DIR=/var/vcap/sys/run/groundcrew
LOG_DIR=/var/vcap/sys/log/groundcrew

mkdir -p $RUN_DIR
chown -R vcap:vcap $RUN_DIR

mkdir -p $LOG_DIR
chown -R vcap:vcap $LOG_DIR

shutdown_flag=""

if [ $1 == "job_shutdown" ]; then
  shutdown_flag="--shutdown"
fi

<%
  tsa_addrs = nil
  tsa_port = nil

  if_p("tsa.host", "tsa.port") do |host, port|
    tsa_addrs = [host]
    tsa_port = port
  end

  if tsa_addrs.nil? && tsa_port.nil?
    tsa = link("tsa")
    tsa_addrs = tsa.instances.collect(&:address)
    tsa_port = tsa.p("bind_port")
  end
%>

for key in /var/vcap/packages/generated_worker_key/id_rsa \
           /var/vcap/jobs/groundcrew/config/private_key; do
  chown vcap:vcap $key
  chmod 0400 $key
done

# even more ideal would be for each node to have its own key and stop doing
# the generated_tsa_host_key thing
{
  <% tsa_addrs.each do |addr| %>
  echo -n '[<%= addr %>]:<%= tsa_port %> '
  cat /var/vcap/packages/generated_tsa_host_key/id_rsa.pub
  <% end %>
} > /var/vcap/jobs/groundcrew/config/generated_tsa_known_hosts

KNOWN_HOSTS_FILE=${RUN_DIR}/known_hosts

cat \
  /var/vcap/jobs/groundcrew/config/static_known_hosts \
  /var/vcap/jobs/groundcrew/config/generated_tsa_known_hosts \
  > $KNOWN_HOSTS_FILE

chown vcap:vcap $KNOWN_HOSTS_FILE

cat /var/vcap/jobs/groundcrew/config/worker.json | \
  sed -e "s/HOSTNAME_REPLACE_ME/$(hostname | cut -d '-' -f 2-)/g" | \
  sed -e 's/"START_TIME_REPLACE_ME"/'$(date +%s)'/g' | \
  /var/vcap/packages/resource_discovery/bin/resource_discovery /var/vcap/packages/*/resource_metadata.json > \
  $RUN_DIR/worker.json

chpst -u vcap:vcap /var/vcap/packages/groundcrew/bin/groundcrew \
  drain \
  <% tsa_addrs.each do |tsa_addr| %> \
  --tsa-addr=<%= tsa_addr %>:<%= tsa_port %> \
  <% end %> \
  --worker-config-file=$RUN_DIR/worker.json \
  --user-known-hosts-file=${KNOWN_HOSTS_FILE} \
  <% if p("tsa.private_key") != "" %> \
  --tsa-ssh-key /var/vcap/jobs/groundcrew/config/private_key \
  <% else %> \
  --tsa-ssh-key /var/vcap/packages/generated_worker_key/id_rsa \
  <% end %> \
  --beacon-pid-file=$RUN_DIR/beacon.pid \
  <% if_p("drain_timeout") do |drain_timeout| %> \
  --timeout=<%= drain_timeout %> \
  <% end %> \
  $shutdown_flag \
  1>>$LOG_DIR/drain.stdout.log \
  2>>$LOG_DIR/drain.stderr.log

echo 0
