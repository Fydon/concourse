---
resources:
- name: rubinius
  type: docker-image
  source:
    repository: rubinius/docker
    tag: latest

- name: concourse-buildbox-ci
  type: git
  source:
    uri: https://github.com/concourse/concourse-lite.git
    branch: master
    paths: [ci/dockerfiles/buildbox-ci, box-setup]

- name: concourse-buildbox-ci-image
  type: docker-image
  source:
    repository: concourse/buildbox-ci
    username: {{docker-username}}
    email: {{docker-email}}
    password: {{docker-password}}

- name: concourse-buildbox-testflight-ci
  type: git
  source:
    uri: https://github.com/concourse/concourse-lite.git
    branch: master
    paths: [ci/dockerfiles/buildbox-testflight-ci]

- name: concourse-buildbox-testflight-ci-image
  type: docker-image
  source:
    repository: concourse/buildbox-testflight-ci
    username: {{docker-username}}
    email: {{docker-email}}
    password: {{docker-password}}

- name: concourse-docs-ci
  type: git
  source:
    uri: https://github.com/concourse/concourse.git
    branch: develop
    paths: [ci/dockerfiles/docs-ci]

- name: concourse-docs-ci-image
  type: docker-image
  source:
    repository: concourse/docs-ci
    username: {{docker-username}}
    email: {{docker-email}}
    password: {{docker-password}}

- name: bosh-cli
  type: s3
  source:
    bucket: bosh-cli-artifacts
    regexp: bosh-cli-(.*)-linux-amd64

- name: concourse-bosh-cli
  type: git
  source:
    uri: https://github.com/concourse/concourse.git
    branch: develop
    paths: [ci/dockerfiles/bosh-cli]

- name: concourse-bosh-cli-image
  type: docker-image
  source:
    repository: concourse/bosh-cli
    username: {{docker-username}}
    email: {{docker-email}}
    password: {{docker-password}}

- name: concourse-btrfs-tools-ci
  type: git
  source:
    uri: https://github.com/concourse/concourse.git
    branch: develop
    paths: [ci/dockerfiles/btrfs-tools-ci]

- name: concourse-btrfs-tools-ci-image
  type: docker-image
  source:
    repository: concourse/btrfs-tools-ci
    username: {{docker-username}}
    email: {{docker-email}}
    password: {{docker-password}}

- name: vagrant-ci-image
  type: docker-image
  source:
    repository: concourse/vagrant-ci
    username: {{docker-username}}
    email: {{docker-email}}
    password: {{docker-password}}

- name: vagrant-ci
  type: git
  source:
    uri: git@github.com:concourse/deployments.git
    paths: [lite/ci/Dockerfile]
    private_key: {{deployments-repo-private-key}}

- name: concourse-atc-ci
  type: git
  source:
    uri: https://github.com/concourse/atc.git
    paths: [Dockerfile]

- name: concourse-atc-ci-image
  type: docker-image
  source:
    repository: concourse/atc-ci
    username: {{docker-username}}
    email: {{docker-email}}
    password: {{docker-password}}

- name: concourse-tsa-ci
  type: git
  source:
    uri: https://github.com/concourse/tsa.git
    paths: [Dockerfile]

- name: concourse-tsa-ci-image
  type: docker-image
  source:
    repository: concourse/tsa-ci
    username: {{docker-username}}
    email: {{docker-email}}
    password: {{docker-password}}

- name: concourse-baggageclaim-ci
  type: git
  source:
    uri: https://github.com/concourse/baggageclaim.git
    paths: [Dockerfile]

- name: concourse-baggageclaim-ci-image
  type: docker-image
  source:
    repository: concourse/baggageclaim-ci
    username: {{docker-username}}
    email: {{docker-email}}
    password: {{docker-password}}

- name: concourse-bin-ci
  type: git
  source:
    uri: https://github.com/concourse/bin.git
    paths: [Dockerfile]

- name: concourse-bin-ci-image
  type: docker-image
  source:
    repository: concourse/bin-ci
    username: {{docker-username}}
    email: {{docker-email}}
    password: {{docker-password}}

- name: concourse-bin-test-ec2-ci
  type: git
  source:
    uri: https://github.com/concourse/bin.git
    paths: [Dockerfile.test-ec2]

- name: concourse-bin-test-ec2-ci-image
  type: docker-image
  source:
    repository: concourse/bin-test-ec2-ci
    username: {{docker-username}}
    email: {{docker-email}}
    password: {{docker-password}}

- name: concourse-bin-testflight-ci
  type: git
  source:
    uri: https://github.com/concourse/bin.git
    paths: [Dockerfile.testflight]

- name: concourse-bin-testflight-ci-image
  type: docker-image
  source:
    repository: concourse/bin-testflight-ci
    username: {{docker-username}}
    email: {{docker-email}}
    password: {{docker-password}}

- name: concourse-static-golang
  type: git
  source:
    uri: https://github.com/concourse/static-golang.git
    paths: [Dockerfile]

- name: concourse-static-golang-image
  type: docker-image
  source:
    repository: concourse/static-golang
    username: {{docker-username}}
    email: {{docker-email}}
    password: {{docker-password}}

- name: ubuntu-16.04
  type: docker-image
  source:
    repository: ubuntu
    tag: "16.04"

- name: golang-1.x
  type: docker-image
  source:
    repository: golang
    tag: '1'

- name: golang-1.x-tarball
  type: s3
  source:
    endpoint: storage.googleapis.com
    bucket: golang
    regexp: 'go(1\.\d+(\.\d+)?)\.linux-amd64\.tar.gz'

- name: alpine-3.3
  type: docker-image
  source:
    repository: alpine
    tag: "3.3"

jobs:
- name: build-buildbox-ci
  public: true
  serial: true
  plan:
  - aggregate:
    - get: concourse-buildbox-ci
      trigger: true
    - get: ubuntu-16.04
      trigger: true
      params: {save: true}
  - put: concourse-buildbox-ci-image
    params:
      dockerfile: concourse-buildbox-ci/ci/dockerfiles/buildbox-ci/Dockerfile
      load_base: ubuntu-16.04
      build: concourse-buildbox-ci/

- name: build-buildbox-testflight-ci
  public: true
  serial: true
  plan:
  - aggregate:
    - get: concourse-buildbox-testflight-ci
      trigger: true
    - get: concourse-atc-ci-image
      passed: [build-atc-ci]
      trigger: true
      params: {save: true}
  - put: concourse-buildbox-testflight-ci-image
    params:
      dockerfile: concourse-buildbox-testflight-ci/ci/dockerfiles/buildbox-testflight-ci/Dockerfile
      load_base: concourse-atc-ci-image
      build: concourse-buildbox-testflight-ci/

- name: build-docs-ci
  public: true
  serial: true
  plan:
  - aggregate:
    - get: concourse-docs-ci
      trigger: true
      params: {submodules: none}
    - get: rubinius
      trigger: true
      params: {save: true}
  - put: concourse-docs-ci-image
    params:
      load_base: rubinius
      build: concourse-docs-ci/ci/dockerfiles/docs-ci

- name: build-bosh-cli
  public: true
  serial: true
  plan:
  - aggregate:
    - get: bosh-cli
      trigger: true
    - get: concourse-bosh-cli
      trigger: true
      params: {submodules: none}
    - get: ubuntu-16.04
      trigger: true
      params: {save: true}
  - task: build-context
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: ubuntu}
      inputs:
      - name: bosh-cli
      - name: concourse-bosh-cli
      outputs:
      - name: context
      run:
        path: bash
        args:
        - -exuc
        - |
          cp concourse-bosh-cli/ci/dockerfiles/bosh-cli/Dockerfile context/
          cp bosh-cli/bosh-cli-* context/
  - put: concourse-bosh-cli-image
    params:
      load_base: ubuntu-16.04
      build: context

- name: build-btrfs-tools-ci
  public: true
  serial: true
  plan:
  - aggregate:
    - get: concourse-btrfs-tools-ci
      trigger: true
      params: {submodules: none}
    - get: ubuntu-16.04
      trigger: true
      params: {save: true}
  - put: concourse-btrfs-tools-ci-image
    params:
      load_base: ubuntu-16.04
      build: concourse-btrfs-tools-ci/ci/dockerfiles/btrfs-tools-ci

- name: build-atc-ci
  public: true
  serial: true
  plan:
  - aggregate:
    - get: concourse-atc-ci
      trigger: true
    - get: ubuntu-16.04
      trigger: true
      params: {save: true}
    - get: golang-1.x-tarball
      trigger: true
  - task: build-context
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: ubuntu}
      inputs:
      - name: golang-1.x-tarball
      - name: concourse-atc-ci
      outputs:
      - name: context
      run:
        path: bash
        args:
        - -exuc
        - |
          cp concourse-atc-ci/Dockerfile context/
          cp golang-1.x-tarball/go* context/
  - put: concourse-atc-ci-image
    params:
      load_base: ubuntu-16.04
      build: context

- name: build-tsa-ci
  public: true
  serial: true
  plan:
  - aggregate:
    - get: concourse-tsa-ci
      trigger: true
    - get: ubuntu-16.04
      trigger: true
      params: {save: true}
    - get: golang-1.x-tarball
      trigger: true
  - task: build-context
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: ubuntu}
      inputs:
      - name: golang-1.x-tarball
      - name: concourse-tsa-ci
      outputs:
      - name: context
      run:
        path: bash
        args:
        - -exuc
        - |
          cp concourse-tsa-ci/Dockerfile context/
          cp golang-1.x-tarball/go* context/
  - put: concourse-tsa-ci-image
    params:
      load_base: ubuntu-16.04
      build: context

- name: build-baggageclaim-ci
  public: true
  serial: true
  plan:
  - aggregate:
    - get: concourse-baggageclaim-ci
      trigger: true
    - get: golang-1.x
      trigger: true
      params: {save: true}
  - put: concourse-baggageclaim-ci-image
    params:
      load_base: golang-1.x
      build: concourse-baggageclaim-ci

- name: build-bin-ci
  public: true
  serial: true
  plan:
  - aggregate:
    - get: concourse-bin-ci
      trigger: true
    - get: golang-1.x
      trigger: true
      params: {save: true}
  - put: concourse-bin-ci-image
    params:
      load_base: golang-1.x
      build: concourse-bin-ci

- name: build-bin-test-ec2-ci
  public: true
  serial: true
  plan:
  - aggregate:
    - get: concourse-bin-test-ec2-ci
      trigger: true
    - get: alpine-3.3
      trigger: true
      params: {save: true}
  - put: concourse-bin-test-ec2-ci-image
    params:
      load_base: alpine-3.3
      build: concourse-bin-test-ec2-ci
      dockerfile: concourse-bin-test-ec2-ci/Dockerfile.test-ec2

- name: build-bin-testflight-ci
  public: true
  serial: true
  plan:
  - aggregate:
    - get: concourse-bin-testflight-ci
      trigger: true
    - get: concourse-atc-ci-image
      passed: [build-atc-ci]
      trigger: true
      params: {save: true}
  - put: concourse-bin-testflight-ci-image
    params:
      load_base: concourse-atc-ci-image
      build: concourse-bin-testflight-ci
      dockerfile: concourse-bin-testflight-ci/Dockerfile.testflight

- name: build-vagrant
  public: false
  serial: true
  plan:
  - aggregate:
    - get: vagrant-ci
      trigger: true
    - get: concourse-bosh-cli-image
      trigger: true
      params: {save: true}
      passed: [build-bosh-cli]
  - put: vagrant-ci-image
    params:
      load_base: concourse-bosh-cli-image
      build: vagrant-ci/lite/ci

- name: build-static-golang
  public: true
  serial: true
  plan:
  - aggregate:
    - get: concourse-static-golang
      trigger: true
    - get: golang-1.x
      trigger: true
      params: {save: true}
  - put: concourse-static-golang-image
    params:
      load_base: golang-1.x
      build: concourse-static-golang
