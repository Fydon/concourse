groups:
- name: develop
  jobs:
  - atc
  - blackbox
  - fly
  - go-concourse
  - baggageclaim
  - tsa
  - cessna
  - rc
  - build-fly
  - bin-rc
  - bosh-rc
  - bin-testflight
  - bosh-testflight
  - bin-smoke
  - bin-docker
  - bosh-deploy
  - topgun

- name: publish
  jobs:
  - major
  - minor
  - patch
  - shipit
  - github-release
  - push-docs
  - virtualbox-box
  - virtualbox-testflight
  - release-virtualbox-box
  - promote-docker
  - master-merge

- name: workers
  jobs:
  - install-go-windows

jobs:
- name: fly
  public: true
  plan:
  - get: concourse
    trigger: true
  - aggregate:
    - task: linux
      file: concourse/ci/fly-linux.yml
    - task: darwin
      file: concourse/ci/fly-darwin.yml
    - task: windows
      file: concourse/ci/fly-windows.yml
      timeout: 15m
      attempts: 2

- name: go-concourse
  public: true
  plan:
  - get: concourse
    trigger: true
  - task: go-unit
    file: concourse/ci/go-concourse.yml

- name: atc
  public: true
  serial: true
  plan:
  - get: concourse
    trigger: true
  - task: go-unit
    file: concourse/ci/atc-go.yml
    privileged: true

- name: baggageclaim
  public: true
  serial: true
  plan:
  - get: concourse
    trigger: true
  - task: build
    privileged: true
    file: concourse/ci/baggageclaim.yml

- name: blackbox
  public: true
  plan:
  - get: concourse
    trigger: true
  - task: build
    file: concourse/ci/blackbox.yml

- name: tsa
  public: true
  plan:
  - get: concourse
    trigger: true
  - task: build
    file: concourse/ci/tsa.yml

- name: cessna
  serial: true
  plan:
    - get: concourse
      trigger: true
    - get: gcp-stemcell
    - get: garden-runc
    - get: bosh-rc
    - get: deployments
    - put: cessna-bosh-deployment
      params:
        manifest: deployments/prod/cessna.yml
        stemcells: [gcp-stemcell/*.tgz]
        releases:
          - garden-runc/*.tgz
          - bosh-rc/concourse-*.tgz
    - task: run-cessna-tests
      file: concourse/src/github.com/concourse/atc/cessna/ci/run-cessna-tests.yml
      input_mapping:
        concourse-release: bosh-rc
        garden-runc-release: garden-runc
        stemcell: gcp-stemcell
      params:
        WORKER_IP: {{cessna-worker-ip}}
        ROOTFS_TAR_URL: {{cessna-rootfs-tar-url}}
        RUN_CESSNA_TESTS: true

- name: major
  public: true
  serial_groups: [version]
  plan:
  - get: version
    params: {bump: major, pre: rc}
  - put: version
    params: {file: version/version}

- name: minor
  public: true
  serial_groups: [version]
  plan:
  - get: version
    params: {bump: minor, pre: rc}
  - put: version
    params: {file: version/version}

- name: patch
  public: true
  serial_groups: [version]
  plan:
  - get: version
    passed: [shipit]
    params: {bump: patch, pre: rc}
    trigger: true
  - put: version
    params: {file: version/version}

- name: rc
  public: true
  serial_groups: [version]
  plan:
  - get: concourse
    trigger: true
    passed: [atc, fly, go-concourse, blackbox, tsa, baggageclaim]
  - get: garden-runc
  - get: version
    params: {pre: rc}
  - put: version
    params: {file: version/version}

- name: build-fly
  public: true
  plan:
  - get: concourse
    trigger: true
    passed: [rc]
  - get: version
    trigger: true
    passed: [rc]
  - get: final-version
    resource: version
    passed: [rc]
    params: {bump: final}
    trigger: true
  - get: garden-runc
    trigger: true
    passed: [rc]
  - aggregate:
    - task: build-linux
      file: concourse/ci/fly-build-linux.yml
    - task: build-darwin
      file: concourse/ci/fly-build-darwin.yml
    - task: build-windows
      file: concourse/ci/fly-build-windows.yml
      timeout: 15m
      attempts: 2
  - task: build-release
    file: concourse/src/github.com/concourse/fly/ci/build-release.yml
  - put: fly-rc
    params:
      name: release/name
      tag: release/tag
      body: release/body
      globs: [release/artifacts/*]

- name: bosh-rc
  public: true
  plan:
  - get: concourse
    passed: [build-fly]
    trigger: true
  - get: garden-runc
    passed: [build-fly]
    trigger: true
  - get: version
    passed: [build-fly]
    trigger: true
  - get: final-version
    resource: version
    passed: [build-fly]
    params: {bump: final}
    trigger: true
  - get: fly-rc
    trigger: true
    passed: [build-fly]
    params:
      globs: [fly_*]
  - task: create-bosh-rc
    file: concourse/ci/create-bosh-rc.yml
  - put: bosh-rc
    params: {file: bosh-rc/concourse-*.tgz}

- name: bin-rc
  public: true
  serial: true
  plan:
  - aggregate:
    - get: concourse
      passed: [build-fly]
      trigger: true
    - get: version
      passed: [build-fly]
      trigger: true
    - get: final-version
      resource: version
      passed: [build-fly]
      params: {bump: final}
      trigger: true
    - get: garden-runc
      passed: [build-fly]
      trigger: true
    - get: bin
      trigger: true
    - get: houdini
      trigger: true
    - get: garden-runc-src
    - get: fly-rc
      trigger: true
      passed: [build-fly]
      params:
        globs: [fly_*]
  - task: checkout-release-tag
    file: concourse/ci/checkout-garden-runc.yml
  - aggregate:
    - task: build-linux
      file: bin/ci/build-linux.yml
      output_mapping: {binary: linux-binary}
    - task: build-darwin
      file: bin/ci/build-darwin.yml
      output_mapping: {binary: darwin-binary}
    - task: build-windows
      file: bin/ci/build-windows.yml
      output_mapping: {binary: windows-binary}
  - task: build-release
    file: bin/ci/build-release.yml
  - put: bin-rc
    params:
      name: release/name
      tag: release/tag
      body: release/body
      globs: [release/artifacts/*]

- name: bosh-testflight
  public: true
  serial: true
  plan:
  - aggregate:
    - get: concourse
      passed: [bosh-rc]
      trigger: true
    - get: bosh-rc
      passed: [bosh-rc]
      trigger: true
    - get: version
      passed: [bosh-rc]
      trigger: true
    - get: garden-runc
      passed: [bosh-rc]
      trigger: true
    - get: fly-rc
      passed: [bosh-rc]
    - get: gcp-stemcell
    - get: deployments
  - put: tf-deployment
    params:
      manifest: concourse/src/github.com/concourse/testflight/scripts/manifests/deployment.yml
      stemcells: [gcp-stemcell/*.tgz]
      releases:
        - garden-runc/*.tgz
        - bosh-rc/concourse-*.tgz
  - task: testflight
    file: concourse/ci/testflight.yml
    params:
      ATC_URL: "http://10.244.15.2:8080"
    timeout: 1h

- name: bin-testflight
  public: true
  serial: true
  plan:
  - aggregate:
    - get: bin
      passed: [bin-rc]
      trigger: true
    - get: concourse
      passed: [bin-rc]
      trigger: true
    - get: linux-binary
      resource: bin-rc
      passed: [bin-rc]
      trigger: true
    - get: version
      passed: [bin-rc]
      trigger: true
    - get: fly-rc
      passed: [bin-rc]
  - task: no-auth
    file: bin/ci/testflight.yml
    privileged: true
    timeout: 1h

- name: topgun
  public: true
  serial: true
  plan:
  - aggregate:
    - get: concourse
      passed: [bosh-rc]
      trigger: true
    - get: bosh-rc
      passed: [bosh-rc]
      trigger: true
    - get: garden-runc
      passed: [bosh-rc]
      trigger: true
    - get: gcp-stemcell
    - get: bosh-cli
  - task: topgun
    file: concourse/ci/topgun.yml
    input_mapping:
      concourse-release: bosh-rc
      garden-runc-release: garden-runc
      stemcell: gcp-stemcell
    params:
      BOSH_ENVIRONMENT: bosh.concourse.ci
      BOSH_CLIENT: {{bosh-client-id}}
      BOSH_CLIENT_SECRET: {{bosh-client-secret}}
      BOSH_KEY: {{topgun-bosh-key}}
      SKIP: ":life"

- name: bosh-deploy
  serial: true
  interruptible: true
  plan:
  - aggregate:
    - get: concourse
      params: {submodules: none}
      passed: [bosh-testflight]
      trigger: true
    - get: version
      passed: [bosh-testflight]
      trigger: true
    - get: bosh-rc
      passed: [bosh-testflight]
      trigger: true
    - get: garden-runc-release
      resource: garden-runc
      passed: [bosh-testflight]
      trigger: true
    - get: bosh-stemcell
      resource: gcp-stemcell
    - get: deployments
      trigger: true
    - get: fly-rc
      passed: [bosh-testflight]
  - put: prod-deployment
    params:
      cleanup: true
      manifest: deployments/prod/concourse.yml
      stemcells: [bosh-stemcell/*.tgz]
      releases:
        - garden-runc-release/*.tgz
        - bosh-rc/concourse-*.tgz
  - put: tracker
    params: {repos: [concourse]}

- name: bin-smoke
  serial: true
  plan:
  - aggregate:
    - get: bin
      passed: [bin-testflight]
      trigger: true
    - get: bin-rc
      passed: [bin-testflight]
      params: {globs: [concourse_linux_amd64]}
      trigger: true
    - get: concourse
      params: {submodules: none}
      passed: [bin-testflight]
      trigger: true
    - get: version
      passed: [bin-testflight]
      trigger: true
    - get: fly-rc
      passed: [bin-testflight]
  - task: setup-tugboat
    file: bin/ci/smoke-tests/setup-tugboat.yml
    params:
      OS: ubuntu
      USER_NAME: root
      ACCESS_TOKEN: {{digitalocean-access-token}}
      SSH_USER: {{digitalocean-ssh-user}}
      SSH_KEY: {{digitalocean-ssh-key}}
      IMAGE: ubuntu-16-04-x64
  - task: create-droplet
    file: bin/ci/smoke-tests/create-droplet.yml
    params: {OS: ubuntu, USER_NAME: root}
  - ensure:
      task: teardown
      file: bin/ci/smoke-tests/teardown-droplet.yml
      params: {OS: ubuntu}
    do:
    - task: install-postgres
      file: bin/ci/smoke-tests/install-postgres-xenial.yml
      params: {USER_NAME: root}

    - task: test-bin
      file: bin/ci/smoke-tests/smoke-test.yml
      params: {USER_NAME: root}

- name: bin-docker
  serial: true
  public: true
  plan:
  - aggregate:
    - get: concourse-docker
      trigger: true
    - get: dumb-init
      trigger: true
    - get: bin-rc
      passed: [bin-testflight]
      params: {globs: [concourse_linux_amd64]}
      trigger: true
    - get: version
      passed: [bin-testflight]
      trigger: true
    - get: ubuntu-image
      params: {save: true}
      trigger: true
    - get: fly-rc
      passed: [bin-testflight]
  - task: build-root
    file: concourse-docker/ci/build-root.yml
  - put: concourse-image-rc
    params:
      build: concourse-image-build-root
      load_base: ubuntu-image
      tag: version/version
      tag_as_latest: true

- name: virtualbox-box
  public: true
  serial: true
  plan:
  - aggregate:
    - get: binaries
      resource: bin-rc
      passed: [bin-testflight]
    - get: concourse
      params: {submodules: none}
      passed: [bin-testflight]
    - get: final-version
      resource: version
      passed: [bin-testflight]
      params: {bump: final}
    - get: version
      passed: [bin-testflight]
    - get: concourse-lite
    - get: concourse-buildbox-ci-image
  - task: build-box
    privileged: true
    file: concourse-lite/ci/build-boxes.yml
    image: concourse-buildbox-ci-image
    tags: [hetzner]
  - put: virtualbox-box
    params: {file: built-box/*.box}

- name: virtualbox-testflight
  public: true
  serial: true
  plan:
  - put: hetzner
    params: {acquire: true}
  - do:
    - aggregate:
      - get: virtualbox-box
        passed: [virtualbox-box]
        trigger: true
      - get: bin-rc
        passed: [virtualbox-box]
      - get: concourse
        passed: [virtualbox-box]
      - get: concourse-lite
        passed: [virtualbox-box]
      - get: version
        passed: [virtualbox-box]
      - get: concourse-buildbox-testflight-ci-image
    - task: testflight
      privileged: true
      file: concourse-lite/ci/testflight.yml
      image: concourse-buildbox-testflight-ci-image
      tags: [hetzner]
    ensure:
      put: hetzner
      params: {release: hetzner}

- name: shipit
  serial_groups: [version]
  plan:
  - aggregate:
    - get: concourse
      passed: [bosh-deploy, bin-smoke, virtualbox-testflight]
    - get: version
      passed: [bosh-deploy, bin-smoke, virtualbox-testflight]
      params: {bump: final}
    - get: garden-runc-release
      passed: [bosh-deploy]
      resource: garden-runc
    - get: bosh-rc
      passed: [bosh-deploy]
    - get: bin-rc
      passed: [bin-smoke, bin-docker, virtualbox-testflight]
    - get: fly-rc
      passed: [bin-smoke, bin-docker, bosh-deploy]
    - get: concourse-image-rc
      passed: [bin-docker]
    - get: virtualbox-box
      passed: [virtualbox-testflight]
  - task: finalize-release
    file: concourse/ci/finalize-release.yml
    params: {BOSH_PRIVATE_CONFIG: {{bosh-private-config}}}
  - aggregate:
    - put: version
      params: {file: version/version}
    - put: concourse-master
      params:
        repository: final-release-repo
        tag: version/version
        tag_prefix: v
    - put: final-release
      params: {file: final-release-tarball/concourse-*.tgz}

- name: release-virtualbox-box
  public: true
  serial: true
  plan:
  - aggregate:
    - get: virtualbox-box
      passed: [shipit]
      trigger: true
    - get: version
      passed: [shipit]
    - get: concourse
      passed: [shipit]
  - task: build-release-notes
    file: concourse/ci/build-release-notes.yml
  - put: virtualbox-box-cloud
    params:
      description: release-notes/notes.md
      release: true
      url: virtualbox-box/url
      version: virtualbox-box/version

- name: push-docs
  serial: true
  plan:
  - aggregate:
    - get: version
      trigger: true
      passed: [github-release]
    - get: concourse
      params: {submodules: none}
      resource: concourse-develop
  - task: build-docs
    file: concourse/ci/build-docs.yml
    params:
      ANALYTICS_ID: {{analytics-id}}
  - put: concourse-docs
    params:
      current_app_name: docs
      manifest: built-docs/manifest.yml

- name: github-release
  plan:
  - aggregate:
    - get: final-release
      passed: [shipit]
      trigger: true
    - get: garden-runc
      passed: [shipit]
      trigger: true
    - get: fly-rc
      passed: [shipit]
      trigger: true
    - get: bin-rc
      passed: [shipit]
      trigger: true
    - get: concourse
      params: {submodules: none}
      passed: [shipit]
      trigger: true
    - get: concourse-master
      params: {submodules: none}
      passed: [shipit]
      trigger: true
    - get: version
      passed: [shipit]
      trigger: true
  - aggregate:
    - task: build-release-notes
      file: concourse/ci/build-release-notes.yml
    - task: rename-release
      file: concourse/ci/rename-release.yml
    - task: generate-commitish
      config:
        platform: linux

        image_resource:
          type: docker-image
          source: {repository: concourse/git-resource}

        inputs:
        - name: concourse-master

        outputs:
        - name: generated-commitish

        run:
          path: sh
          args:
          - -c
          - |
            git -C concourse-master rev-parse HEAD > generated-commitish/commitish
  - put: github-release
    params:
      name: release-notes/release-name
      tag: release-notes/release-name
      body: release-notes/notes.md
      commitish: generated-commitish/commitish
      globs:
      - final-release/*.tgz
      - renamed-release/garden-runc-*.tgz
      - bin-rc/concourse_*
      - fly-rc/fly_*

- name: promote-docker
  serial: true
  public: true
  plan:
  - aggregate:
    - get: concourse-image-rc
      passed: [shipit]
      params: {save: true}
      trigger: true
    - get: version
      passed: [shipit]
      trigger: true
  - put: concourse-image-final
    params:
      load: concourse-image-rc
      tag: version/version
      tag_as_latest: true

- name: master-merge
  plan:
  - aggregate:
    - get: concourse-master
      params: {submodules: none}
      trigger: true
    - get: concourse-develop
      params: {submodules: none}
  - task: merge-to-develop
    file: concourse-develop/ci/master-merge.yml
  - put: concourse
    params: {repository: concourse-merged}

- name: install-go-windows
  plan:
  - aggregate:
    - get: concourse
    - get: golang-windows
  - task: install
    file: concourse/ci/install-go-windows.yml

resources:
- name: version
  type: semver
  source:
    bucket: concourse-releases
    key: current-version
    access_key_id: {{pipeline-bucket-access-key}}
    secret_access_key: {{pipeline-bucket-secret-key}}

- name: final-release
  type: s3
  source:
    bucket: concourse-releases
    regexp: concourse-(.*).tgz
    access_key_id: {{pipeline-bucket-access-key}}
    secret_access_key: {{pipeline-bucket-secret-key}}

- name: bosh-rc
  type: s3
  source:
    bucket: concourse-release-candidates
    regexp: concourse-(.*).tgz
    access_key_id: {{pipeline-bucket-access-key}}
    secret_access_key: {{pipeline-bucket-secret-key}}

- name: virtualbox-box
  type: s3
  source:
    bucket: concourse-boxes
    regexp: concourse-virtualbox-ubuntu-trusty-(.*).box
    access_key_id: {{pipeline-bucket-access-key}}
    secret_access_key: {{pipeline-bucket-secret-key}}

- name: prod-deployment
  type: bosh-deployment
  source:
    target: {{bosh-target}}
    deployment: {{bosh-deployment}}
    client_id: {{bosh-client-id}}
    client_secret: {{bosh-client-secret}}

- name: tf-deployment
  type: bosh-deployment
  source:
    target: {{bosh-target}}
    deployment: concourse-testflight
    client_id: {{bosh-client-id}}
    client_secret: {{bosh-client-secret}}

- name: cessna-bosh-deployment
  type: bosh-deployment
  source:
    target: {{bosh-target}}
    deployment: concourse-cessna
    client_id: {{bosh-client-id}}
    client_secret: {{bosh-client-secret}}

- name: virtualbox-box-cloud
  type: vagrant-cloud
  source:
    username: concourse
    box: lite
    provider: virtualbox
    access_token: {{atlas-access-token}}

- name: garden-runc
  type: bosh-io-release
  source:
    repository: cloudfoundry/garden-runc-release

- name: fly-rc
  type: github-release
  source:
    access_token: {{concourse-github-release-access-token}}
    user: concourse
    repository: fly
    release: false
    pre_release: true

- name: tracker
  type: tracker
  source:
    tracker_url: https://www.pivotaltracker.com
    project_id: "1059262"
    token: {{tracker-token}}

- name: gcp-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-google-kvm-ubuntu-trusty-go_agent

- name: concourse-lite
  type: git
  source:
    uri: https://github.com/concourse/concourse-lite.git
    branch: master

- name: concourse-develop
  type: git
  source:
    uri: https://github.com/concourse/concourse.git
    branch: develop

- name: concourse-docs
  type: cf
  source:
    api: {{cf-target}}
    username: {{cf-username}}
    password: {{cf-password}}
    organization: {{cf-organization}}
    space: {{cf-space}}

- name: github-release
  type: github-release
  source:
    access_token: {{concourse-github-release-access-token}}
    repository: concourse
    user: concourse

- name: concourse
  type: git
  source:
    uri: git@github.com:concourse/concourse.git
    branch: develop
    private_key: {{concourse-repo-private-key}}

- name: concourse-master
  type: git
  source:
    uri: git@github.com:concourse/concourse.git
    branch: master
    private_key: {{concourse-repo-private-key}}

- name: deployments
  type: git
  source:
    uri: git@github.com:concourse/deployments.git
    branch: master
    private_key: {{deployments-repo-private-key}}

- name: houdini
  type: git
  source:
    uri: https://github.com/vito/houdini.git
    branch: master

- name: hetzner
  type: pool
  source:
    uri: git@github.com:concourse/locks.git
    branch: master
    pool: hetzner
    private_key: {{locks-repo-private-key}}

- name: bin
  type: git
  source:
    uri: https://github.com/concourse/bin
    branch: master

- name: garden-runc-src
  type: git
  source:
    uri: https://github.com/cloudfoundry/garden-runc-release
    branch: master

- name: bin-rc
  type: github-release
  source:
    user: concourse
    repository: bin
    access_token: {{bin-release-token}}

- name: concourse-docker
  type: git
  source:
    uri: https://github.com/concourse/concourse-docker

- name: dumb-init
  type: github-release
  source:
    user: Yelp
    repository: dumb-init
    access_token: {{bin-release-token}} # just so we don't get rate limited

- name: ubuntu-image
  type: docker-image
  source:
    repository: ubuntu
    tag: '16.04'

- name: concourse-image-rc
  type: docker-image
  source:
    repository: concourse/concourse-rc
    username: {{docker-username}}
    password: {{docker-password}}

- name: concourse-image-final
  type: docker-image
  source:
    repository: concourse/concourse
    username: {{docker-username}}
    password: {{docker-password}}

- name: golang-windows
  type: s3
  source:
    endpoint: storage.googleapis.com
    bucket: golang
    regexp: 'go(\d+\.\d+(\.\d+)?)\.windows-amd64\.msi'

- name: concourse-buildbox-testflight-ci-image
  type: docker-image
  source:
    repository: concourse/buildbox-testflight-ci

- name: concourse-buildbox-ci-image
  type: docker-image
  source:
    repository: concourse/buildbox-ci

- name: bosh-cli
  type: s3
  source:
    bucket: bosh-cli-artifacts
    regexp: bosh-cli-([^-]+)-linux-amd64
